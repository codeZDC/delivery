package com.tuzhi.delivery.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.tuzhi.delivery.domain.Delivery;
import com.tuzhi.delivery.domain.DeliveryList;
import com.tuzhi.delivery.domain.Dlxx;
import com.tuzhi.delivery.domain.User;
import com.tuzhi.delivery.mapper.IDeliveryListMapper;
import com.tuzhi.delivery.mapper.IDeliveryMapper;
import com.tuzhi.delivery.service.IDeliveryService;
import com.tuzhi.delivery.util.DateUtils;

/**
 * @author codeZ
 * @date 2018年3月28日 下午3:42:05
 * 
 */

@Service
public class DeliveryServiceImpl implements IDeliveryService {

	@Autowired
	private IDeliveryMapper mapper;
	@Autowired
	private IDeliveryListMapper deliveryListMapper;
	
	//根据userId获取用户汇交信息
	@Override
	public Map<String, Object> getDeliveries(Integer userId) {
		Map<String, Object> map = new HashMap<>();
		List<Delivery> deliveries = mapper.getDeliveries(userId,DateUtils.getYear());
		map.put("rows", deliveries);
		
		if(deliveries!=null&&deliveries.size()>0){
			Integer status = deliveries.get(0).getStatus();
			if(status != null && status != -1){//说明有清单说明了
				//去查看汇交说明
				DeliveryList remarks =  mapper.getDeliveryRemarks(userId,DateUtils.getYear());
				map.put("remarks", remarks);
			}
			map.put("status", 200+status);
		}else{map.put("status", 250);}
		return map;
	}

	@Override
	public boolean toExamine(List<Integer> ids, List<String> types, String remarks,Integer userId) {
		//组装用于批量更新的传值类
		for (int i = 0; i < ids.size(); i++) {
			mapper.toExamine("t_delivery_"+types.get(i),0,ids.get(i));
		}
		//批量更新汇交状态,,修改为草稿0
		
		//添加汇交说明到t_delivery_list
		DeliveryList list = new DeliveryList();
		list.setUserId(userId);
		list.setYear(DateUtils.getYear());
		list.setStatus(0);
		list.setDeliverRemarks(remarks);
		list.setDeliverTime(new Date());
		
		return deliveryListMapper.insertSelective(list) > 0;
	}

	//获取管辖用户 
	@Override
	public PageInfo<User> getCompanies(Delivery delivery) {
		// TODO 分页查询
		if(delivery.getExamineYear()==null)
			delivery.setExamineYear(DateUtils.getYear());
		PageHelper.startPage(delivery.getPageNum(), delivery.getPageSize());
		PageInfo<User> pageInfo = new PageInfo<User>(mapper.getCompanies(delivery));
		return pageInfo;
	}

	
}
