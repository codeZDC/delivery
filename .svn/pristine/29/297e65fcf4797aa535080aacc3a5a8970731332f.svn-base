var contextPath = $('#contextPath').val();
var localData ;
$(function(){
	//页面表单初始化
	loadTable(1);
});

//加载列表数据
function loadTable(pageNum){
	var pageSize = $('#pageSizeSelect').val();
	var searchText = $('#searchInput').val().replace('/\s/g','');
	
	$.getJSON(contextPath + 'role/list',{roleName:searchText,pageNum:pageNum,pageSize:pageSize},function(res){
		buildTable(res.rows);
		initPaginationBar(res.total,pageSize,pageNum);
	});
}
function buildTable(data){
	localData = data ;
	var index,roleName,status,remarks,
	handler =  	$('<td>').append('<div class="hidden-sm hidden-xs action-buttons">'
				+'<a class="green editData" href="#"> <i class="ace-icon fa fa-pencil bigger-130"></i>'
				+'</a> <a class="red removeData" href="#"> <i '
				+'class="ace-icon fa fa-trash-o bigger-130"></i></a></div>');
	var tbody = $('#roles tbody').empty();
	$.each(data,function(temp , per){
		index = $('<td>').text(temp + 1);
		roleName = $('<td>').text(per.roleName) ; 
		status = $('<td>').append(per.status==1?'<span class="label label-success">可用</span>':'<span class="label label-danger">停用</span>'); 
		remarks = $('<td>').text(per.remarks); 
		$('<tr>').attr('id',per.id).append(index).append(roleName).append(status).append(remarks)
		.append(handler.clone()).appendTo(tbody);
	})
}

function validate(){
	var roleName = $("#roleName");
	if(roleName.val() == ""){
		alert("请输入用户名");
		roleName.focus();
		return false;
	}
	return true;
}

//添加角色点击事件
$( "#add-role" ).on('click', function(e) {
	e.preventDefault();
	$('#add-role-form')[0].reset();
	$( "#add-role-modal" ).removeClass('hide').dialog({
		resizable: false,
		width: '420',
		modal: true,
		title: "添加角色",
		title_html: true,
		buttons: [
			{
				html: "<i class='ace-icon fa fa-floppy-o bigger-120 blue'></i>&nbsp; 保存",
				"class" : "btn btn-white btn-info btn-bold",
				click: function() {
					$('#add-role-modal').next().find('button').attr('disabled','disabled');
					//校验
					//if(!validate()) return;
					$.post(contextPath + 'role/save',$('#add-role-form').serialize(),function(res){
						alert(res.message);
						loadTable(1);
						$("#add-role-modal").dialog( "close" );
					},'JSON');
				}
			}
			,
			{
				html: "<i class='ace-icon fa fa-times red2'></i>&nbsp; 取消",
				"class" : "btn btn-white btn-default btn-round",
				click: function() {
					$( this ).dialog( "close" );
				}
			}
			]
	});
});


//添加菜单点击事件
$( "#menu-admin" ).on('click', function(e) {
	e.preventDefault();
	$( "#dialog-menuTree" ).removeClass('hide').dialog({
		resizable: false,
		width: '420',
		modal: true,
		title: "菜单管理",
		title_html: true,
		buttons: [
			{
				html: "<i class='ace-icon fa fa-floppy-o bigger-120 blue'></i>&nbsp; 保存",
				"class" : "btn btn-white btn-info btn-bold",
				click: function() {
					
				}
			}
			,
			{
				html: "<i class='ace-icon fa fa-times red2'></i>&nbsp; 取消",
				"class" : "btn btn-white btn-default btn-round",
				click: function() {
					$( this ).dialog( "close" );
				}
			}
			]
	});
});
//编辑角色,,本地数据
$(document).on('click','.editData',function(){
	var id = $(this).parents('tr').attr('id');
	$.each(localData,function(index,per){
		if(per.id == id){
			for(var key in per){
				$('#edit-role-form [name='+key+']').val(per[key]);
			}
		}
		$( "#edit-role-modal" ).removeClass('hide').dialog({
			resizable: false,
			width: '420',
			modal: true,
			title: "编辑角色",
			title_html: true,
			buttons: [
				{
					html: "<i class='ace-icon fa fa-floppy-o bigger-120 blue'></i>&nbsp; 保存",
					"class" : "btn btn-white btn-info btn-bold",
					click: function() {
						$('#edit-role-modal').next().find('button').attr('disabled','disabled');
						//if(!validate()) return;
						$.post(contextPath + 'role/edit',$('#edit-role-form').serialize(),function(res){
							alert(res.message);
							loadTable(1);
							$("#edit-role-modal").dialog( "close" );
						},'JSON');
					}
				}
				,
				{
					html: "<i class='ace-icon fa fa-times red2'></i>&nbsp; 取消",
					"class" : "btn btn-white btn-default btn-round",
					click: function() {
						$( this ).dialog( "close" );
					}
				}
				]
		});
	});
})
//删除角色
$(document).on('click','.removeData',function(){
	var id  = $(this).parents('tr').attr('id');
	showConfirm(function(){
		$.post(contextPath + 'role/del' ,{ids:[id]} ,function(res){
			alert(res.message);
			if(res.success){
				loadTable(1);
				cancelConfirm();
			}
		},'jSON');
	});
})

//分页条
function initPaginationBar(total,pageSize,currentPage){
	$("#paginationBar").pagination(total, {
		//num_edge_entries: 4, //边缘页数
		num_display_entries: 4, //主体页数
		callback: pageselectCallback,
		current_page :currentPage-1,
		items_per_page: pageSize, //每页显示1项
		prev_text: "前一页",
		next_text: "后一页"
	});
}
function pageselectCallback(currentPage){
	loadTable(currentPage);	
}

$('#searchInput').keyup(function(){
	loadTable(1);
});
$('#pageSizeSelect').change(function(){
	loadTable(1);
});

//初始化菜单树
//初始化数插件
jQuery(function($){
	var sampleData = initiateDemoData();//see below


	$('#tree1').ace_tree({
		dataSource: sampleData['dataSource1'],
		multiSelect: true,
		cacheItems: true,
		'open-icon' : 'ace-icon tree-minus',
		'close-icon' : 'ace-icon tree-plus',
		'selectable' : true,
		'selected-icon' : 'ace-icon fa fa-check',
		'unselected-icon' : 'ace-icon fa fa-times',
		loadingHTML : '<div class="tree-loading"><i class="ace-icon fa fa-refresh fa-spin blue"></i></div>'
	});


	/**
	//please refer to docs for more info
	$('#tree1')
	.on('loaded.fu.tree', function(e) {
	})
	.on('updated.fu.tree', function(e, result) {
	})
	.on('selected.fu.tree', function(e) {
	})
	.on('deselected.fu.tree', function(e) {
	})
	.on('opened.fu.tree', function(e) {
	})
	.on('closed.fu.tree', function(e) {
	});
	 */


	function initiateDemoData(){
		var tree_data = {
				'for-sale' : {text: 'For Sale', type: 'folder'}	,
				'vehicles' : {text: 'Vehicles', type: 'folder'}	,
				'rentals' : {text: 'Rentals', type: 'folder'}	,
				'real-estate' : {text: 'Real Estate', type: 'folder'}	,
				'pets' : {text: 'Pets', type: 'folder'}	,
				'tickets' : {text: 'Tickets', type: 'item'}	,
				'services' : {text: 'Services', type: 'item'}	,
				'personals' : {text: 'Personals', type: 'item'}
		}
		tree_data['for-sale']['additionalParameters'] = {
				'children' : {
					'appliances' : {text: 'Appliances', type: 'item'},
					'arts-crafts' : {text: 'Arts & Crafts', type: 'item'},
					'clothing' : {text: 'Clothing', type: 'item'},
					'computers' : {text: 'Computers', type: 'item'},
					'jewelry' : {text: 'Jewelry', type: 'item'},
					'office-business' : {text: 'Office & Business', type: 'item'},
					'sports-fitness' : {text: 'Sports & Fitness', type: 'item'}
				}
		}
		tree_data['vehicles']['additionalParameters'] = {
				'children' : {
					'cars' : {text: 'Cars', type: 'folder'},
					'motorcycles' : {text: 'Motorcycles', type: 'item'},
					'boats' : {text: 'Boats', type: 'item'}
				}
		}
		tree_data['vehicles']['additionalParameters']['children']['cars']['additionalParameters'] = {
				'children' : {
					'classics' : {text: 'Classics', type: 'item'},
					'convertibles' : {text: 'Convertibles', type: 'item'},
					'coupes' : {text: 'Coupes', type: 'item'},
					'hatchbacks' : {text: 'Hatchbacks', type: 'item'},
					'hybrids' : {text: 'Hybrids', type: 'item'},
					'suvs' : {text: 'SUVs', type: 'item'},
					'sedans' : {text: 'Sedans', type: 'item'},
					'trucks' : {text: 'Trucks', type: 'item'}
				}
		}

		tree_data['rentals']['additionalParameters'] = {
				'children' : {
					'apartments-rentals' : {text: 'Apartments', type: 'item'},
					'office-space-rentals' : {text: 'Office Space', type: 'item'},
					'vacation-rentals' : {text: 'Vacation Rentals', type: 'item'}
				}
		}
		tree_data['real-estate']['additionalParameters'] = {
				'children' : {
					'apartments' : {text: 'Apartments', type: 'item'},
					'villas' : {text: 'Villas', type: 'item'},
					'plots' : {text: 'Plots', type: 'item'}
				}
		}
		tree_data['pets']['additionalParameters'] = {
				'children' : {
					'cats' : {text: 'Cats', type: 'item'},
					'dogs' : {text: 'Dogs', type: 'item'},
					'horses' : {text: 'Horses', type: 'item'},
					'reptiles' : {text: 'Reptiles', type: 'item'}
				}
		}

		var dataSource1 = function(options, callback){
			var $data = null
			if(!("text" in options) && !("type" in options)){
				$data = tree_data;//the root tree
				callback({ data: $data });
				return;
			}
			else if("type" in options && options.type == "folder") {
				if("additionalParameters" in options && "children" in options.additionalParameters)
					$data = options.additionalParameters.children || {};
					else $data = {}//no data
			}

			if($data != null)//this setTimeout is only for mimicking some random delay
				setTimeout(function(){callback({ data: $data });} , parseInt(Math.random() * 500) + 200);

			//we have used static data here
			//but you can retrieve your data dynamically from a server using ajax call
			//checkout examples/treeview.html and examples/treeview.js for more info
		}

		return {'dataSource1': dataSource1}
	}

});
