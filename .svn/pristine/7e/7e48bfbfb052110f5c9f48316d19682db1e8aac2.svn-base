package com.tuzhi.delivery.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.tuzhi.delivery.base.BaseServiceImpl;
import com.tuzhi.delivery.mapper.IDeliveryGcclMapper;
import com.tuzhi.delivery.domain.DeliveryGccl;
import com.tuzhi.delivery.service.IDeliveryGcclService;

import tk.mybatis.mapper.entity.Example;
import tk.mybatis.mapper.entity.Example.Criteria;

/**
 * @ClassName:DeliveryGcclServiceImpl
 * @Description:业务层接口实现类
 * @author 郑德超
 * @CreateDate 2018-03-26 17:43:23
 */
@Service
public class DeliveryGcclServiceImpl extends BaseServiceImpl<DeliveryGccl> implements IDeliveryGcclService {
	
	@Autowired
	private IDeliveryGcclMapper deliveryGcclMapper;
 
	public PageInfo<DeliveryGccl> findDeliveryGcclList(DeliveryGccl deliveryGccl) {
		// TODO 分页查询
		PageHelper.startPage(deliveryGccl.getPageNum(), deliveryGccl.getPageSize());
		PageInfo<DeliveryGccl> pageInfo = new PageInfo<DeliveryGccl>(deliveryGcclMapper.findDeliveryGcclList(deliveryGccl));
		
		return pageInfo;
	}
	
	public DeliveryGccl getDeliveryGcclById(Integer id){
		// TODO 根据ID查询
		return deliveryGcclMapper.selectByPrimaryKey(id);
	}
	
	public boolean saveDeliveryGccl(DeliveryGccl deliveryGccl){
		// TODO 新增
		return deliveryGcclMapper.insertSelective(deliveryGccl) > 0;
	}
	
	public boolean editDeliveryGccl(DeliveryGccl deliveryGccl){
		// TODO 修改
		return deliveryGcclMapper.updateByPrimaryKeySelective(deliveryGccl) > 0;
	}
	
	public boolean delDeliveryGccl(List<Integer> deliveryGcclArr){
		// TODO	删除
		Example example = new Example(DeliveryGccl.class);
		Criteria c = example.createCriteria();
		c.andIn("id", deliveryGcclArr);
		return deliveryGcclMapper.deleteByExample(example) > 0;
	}

}
